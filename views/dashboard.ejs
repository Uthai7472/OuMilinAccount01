<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
    />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        .topic {
            width: 100%;
            height: auto;
            padding: 10px;
            display: flex;
            justify-content: center;
            margin: 0 10px 10px 10px;
            border-radius: 10px;
        }
        .select-month {
            width: 100%;
            height: auto;
            padding: 10px;
            
            margin: 0 10px 0 10px;
            border-radius: 10px;
            background-color: rgba(254, 200, 216,0.4);
        }
        .label {
            width: 100%;
            height: auto;
            padding: 10px 5px 0 5px;
            /* border: 1px solid black; */
        }
        .form-control {
            margin-bottom: 10px;
        }

        .submit-btn {
            width: 12rem;
        }
        .btn.btn-primary {
            width: 100%;
            border-radius: 20px;
            border: none;
            background-color: rgb(255, 172, 155);
        }

        .chart {
            margin-top: 10px;
            width: 100%;
            height: 40rem;
            padding: 10px;
            /* border: 3px solid black; */
            border-radius: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: rgb(249, 250, 249);
            box-shadow: 10px 4px 8px #888888;
        }

        .show-sum {
            width: 100%;
            height: auto;
            padding: 5px;
            margin-top: 10px;
            background-color: rgb(249, 195, 210);
            display: flex;
            justify-content: center;
        }

        @media screen and (max-width: 825px) {
            .show-sum h3 {
                font-size: 12px;
            }
        }
    </style>
</head>
<body>

    <%- include('subview/header') %>

    

    <div class="select-month">
        <div class="label">
            <p>เลือกเดือนที่ต้องการ</p>
        </div>
        <form action="/dashboard/search" method="POST">
            <div class="select-box">
                <select name="month" id="month" class="form-control">
                    <% get_months.forEach((row) => { %> 
                        <option value="<%= row.month %>"><%= row.month %></option>
                    <% }) %>
                </select>
            </div>
            <div class="submit-btn">
                <button type="submit" class="btn btn-primary">ยืนยัน</button>
            </div>
        </form>
    </div>

    <div class="topic">
        <h2>เดือน <%= month %></h2>
    </div>

    <div class="chart">
        <canvas id="myChart"></canvas>
    </div>

    <div class="chart">
        <canvas id="myChartBar"></canvas>
    </div>

    <div class="show-sum">
        <h3 style="display: inline;">รวม =</h3>
        <h3 style="display: inline; padding-left: 5px;"><%= get_sum[0].sumPrice %> บาท</h3>
    </div>

    <script>
        var categoriesArray = ('<%= categories %>').split(",").map(item => item.trim());
        var pricesArray = ('<%= prices %>').split(",").map(item => item.trim());

        var get_sum = <%= get_sum[0].sumPrice %>;

        var dividedArray = pricesArray.map(function(price) {
            return ((price * 100) / get_sum).toFixed(1) + '%';
          });
        const ctx = document.getElementById('myChart').getContext('2d');
        new Chart(ctx, {
        type: 'pie',
        data: {
            labels: categoriesArray,
            datasets: [{
            label: 'ราคา',
            data: pricesArray,
            backgroundColor: ['rgb(248, 194, 206)', 'rgb(253, 244, 171)', 
            'rgb(194, 243, 159)', 'rgb(255, 223, 211)', 'rgb(238, 120, 153)',
            'rgb(235, 232, 190)', 'rgb(107, 149, 219)', 'rgb(107, 149, 219)',
            'rgb(104, 68, 173)', 'rgb(152, 222, 243)', 'rgb(252, 190, 171)',
            'rgb(254, 237, 203)', 'rgb(252, 189, 166)']
            }]
        },
        options: {
            plugins: {
            datalabels: {
                color: '#000', // Set the color of the data labels
                formatter: (value, context) => {
                // Display the value of each data point as the label
                return value + ' บาท'; // Append ' บาท' to the value for the Thai Baht currency
                }
            }
            }
        }}
        )

        // Sort the categoriesArray and dividedArray in descending order
        var sortedData = categoriesArray.map(function(_, index) {
            return {
            category: categoriesArray[index],
            value: pricesArray[index]
            };
        }).sort(function(a, b) {
            return parseFloat(b.value) - parseFloat(a.value);
        });
        
        categoriesArray = sortedData.map(function(item) {
            return item.category;
        });
        
        pricesArray = sortedData.map(function(item) {
            return item.value;
        });

        // Sort the categoriesArray and dividedArray in descending order
        var sortedData1 = categoriesArray.map(function(_, index) {
            return {
            category: categoriesArray[index],
            value: dividedArray[index]
            };
        }).sort(function(a, b) {
            return parseFloat(b.value) - parseFloat(a.value);
        });
        
        categoriesArray1 = sortedData1.map(function(item) {
            return item.category;
        });
        
        var dividedArray = pricesArray.map(function(price) {
            return ((price * 100) / get_sum).toFixed(1);
        });
    
        console.log(dividedArray);
    
        var ctx2 = document.getElementById('myChartBar').getContext('2d');
        new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: categoriesArray,
                datasets: [{
                    label: 'Price',
                    data: dividedArray,
                    backgroundColor: ['rgb(240, 136, 136)', 'rgb(235, 161, 161)', 
                        'rgb(243, 182, 182)', 'rgb(245, 179, 215)', 'rgb(254, 197, 216)',
                        'rgb(176, 227, 246)', 'rgb(237, 241, 255)', 'rgb(182, 159, 213)',
                        'rgb(219, 194, 238)', 'rgb(244, 218, 249)', 'rgb(249, 215, 226)',
                        'rgb(255, 203, 165)', 'rgb(255, 222, 200)'],
                    borderColor: ['rgb(240, 136, 136)', 'rgb(235, 161, 161)', 
                        'rgb(243, 182, 182)', 'rgb(245, 179, 215)', 'rgb(254, 197, 216)',
                        'rgb(176, 227, 246)', 'rgb(237, 241, 255)', 'rgb(182, 159, 213)',
                        'rgb(219, 194, 238)', 'rgb(244, 218, 249)', 'rgb(249, 215, 226)',
                        'rgb(255, 203, 165)', 'rgb(255, 222, 200)'],
                    borderWidth: 1
                }]
            },
            options: {
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                var label = context.dataset.label || '';
                                var price = parseFloat(pricesArray[context.dataIndex]).toFixed(2);
                                return label + ': ' + price + ' บาท';
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        max: 35, // Set the maximum value of y-axis to 100%
                        ticks: {
                            callback: function(value) {
                                return value + '%'; // Append '%' symbol to tick labels
                            }
                        }
                    }
                },
            plugins: {
                afterDraw: function(chart) {
                    var ctx = chart.ctx;
                    chart.data.datasets.forEach(function(dataset, i) {
                        var meta = chart.getDatasetMeta(i);
                        if (!meta.hidden) {
                            meta.data.forEach(function(element, index) {
                                // Draw the price value on top of each bar
                                var price = parseFloat(pricesArray[index]).toFixed(2);
                                ctx.fillStyle = 'black';
                                ctx.textAlign = 'center';
                                ctx.textBaseline = 'bottom';
                                ctx.fillText(price, element._model.x, element._model.y - 5);
                            });
                        }
                    });
                }
            } 
            }
        });
      </script>
    
</body>
</html>